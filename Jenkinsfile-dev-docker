node{
  
  stage('Scm checkout'){
    git credentialsId:'e3ba15a6-29db-42ea-a0c4-7dff567b60a1', url:'ssh://git@git.trianz.com:2244/COSMOS/UserInterface.git', branch:'new-Concierto'
  }
  GIT_SHORT_COMMIT=sh(returnStdout:true, script:"git log -n 1 --pretty=format:'%h'").trim()
  def TAG=BUILD_NUMBER+'-'+GIT_SHORT_COMMIT;
  stage('Build docker Image') {
    sh'docker build . -t user-interface'
  }
  stage('Tagging and Pushing') {
    withCredentials([string(credentialsId:'n_ip', variable:'n_ip'), string(credentialsId:'n_un', variable:'n_un'), string(credentialsId:'n_pw', variable:'n_pw')]) {
      
    sh '''echo TAG:'''+TAG+''' '''
    sh '''docker tag user-interface 54.203.55.161:5000/user-interface:'''+TAG+''' '''
    sh 'docker tag user-interface 54.203.55.161:5000/user-interface:latest'
    sh 'docker push 54.203.55.161:5000/user-interface:latest'
    sh '''docker push 54.203.55.161:5000/user-interface:'''+TAG+''' '''
    }
  }
  stage('Docker deploy'){
    def dockerrun = "docker service update --image 54.203.55.161:5000/user-interface:${TAG} ui"
    sshagent(['2e317157-4769-432b-b303-faa8eceb5a03']) {
    sh "ssh -o StrictHostKeyChecking=no ubuntu@172.20.128.178 ${dockerrun}"
	}
  }
    stage('Clean Up') {
    sh '''docker rmi -f 54.203.55.161:5000/user-interface:'''+TAG+''' '''
    sh 'docker rmi -f 54.203.55.161:5000/user-interface:latest'
    sh 'docker rmi -f user-interface'
  }
}
